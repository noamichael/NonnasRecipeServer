{"version":3,"sources":["webpack:///./src/app/recipes/recipe-table.service.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.module.ts"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { RecipeResponse, TypeOption } from '../recipe.service';\nimport { Recipe } from '../schema/recipe';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable()\nexport class RecipeTableService {\n\n  $recipes: BehaviorSubject<RecipeResponse<Recipe[]>> = new BehaviorSubject(null)\n  $addRecipe: Subject<Recipe> = new Subject();\n  $removeRecipe: Subject<Recipe> = new Subject();\n  recipeTypes: TypeOption[]\n\n  constructor() { }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlY2lwZXMvcmVjaXBlcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, ActivatedRoute } from '@angular/router';\nimport { RecipeResponse, RecipeService, TypeOption } from '../recipe.service';\nimport { Recipe } from '../schema/recipe';\nimport { RecipeTableService } from './recipe-table.service';\n\n@Component({\n  selector: 'nr-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css'],\n  providers: [RecipeTableService]\n})\nexport class RecipesComponent implements OnInit {\n\n  constructor(\n    private recipeTableService: RecipeTableService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    let recipes;\n    this.route.data.subscribe(data => {\n      recipes = data.recipes\n      this.recipeTableService.$recipes.next(recipes);\n      const NULL_SELECT = { label: '-- Select --', value: null }\n      const recipeTypes = data.recipeTypes.data.map(s => { return { label: s, value: s } });\n      recipeTypes.unshift(NULL_SELECT);\n      this.recipeTableService.recipeTypes = recipeTypes;\n    });\n    this.recipeTableService.$addRecipe.subscribe(recipe => {\n      recipes.data.push(recipe);\n      recipes.totalRecordCount++;\n      this.recipeTableService.$recipes.next(recipes);\n    });\n    this.recipeTableService.$removeRecipe.subscribe(recipe => {\n      recipes.data = recipes.data.filter(r => r.id != recipe.id);\n      recipes.totalRecordCount--;\n      this.recipeTableService.$recipes.next(recipes);\n    });\n  }\n\n}\n\n@Injectable()\nexport class RecipesResolver implements Resolve<RecipeResponse<Recipe[]>> {\n\n  constructor(\n    private recipeService: RecipeService\n  ) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    const page = route.params.page || 1;\n    const count = route.params.count || 25;\n\n    return this.recipeService.getRecipes(page, count, route.params);\n  }\n}\n\n@Injectable()\nexport class RecipeTypesResolver implements Resolve<RecipeResponse<string[]>> {\n\n  constructor(\n    private recipeService: RecipeService\n  ) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    return this.recipeService.getRecipeTypes();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RecipesComponent, RecipesResolver, RecipeTypesResolver } from './recipes.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [RecipesComponent],\n  providers: [RecipesResolver, RecipeTypesResolver],\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: RecipesComponent,\n        resolve: {\n          recipes: RecipesResolver,\n          recipeTypes: RecipeTypesResolver\n        },\n        children: [\n          {\n            path: '',\n            loadChildren: './recipe-list/recipe-list.module#RecipeListModule'\n          },\n          {\n            path: ':id',\n            loadChildren: './recipe-entry/recipe-entry.module#RecipeEntryModule'\n          }\n        ]\n      }\n    ])\n  ]\n})\nexport class RecipesModule { }\n"],"sourceRoot":""}